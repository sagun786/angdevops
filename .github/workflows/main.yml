##A project can have multiple workflow files like build, release, etc, 
##but for the sake of simplicity, weâ€™ll be using only one file for this project.


##GitHub is flexible with however you want to name your workflow file, 
## but the file has to be a yaml file and it has to be in the .github/workflows folder.
name: main


## A workflow trigger is required for a workflow. 
## I configured the workflow to trigger on pushes to the master branch
on:
  push:
    branches:
      - 'master'

## In order to reduce build time and build complexity,
## I will keep as much work inside one job as possible.
## Job below is created to build and test the Angular application

jobs:
  ci:
    name: Build and Test
    runs-on: ubuntu-latest
    ## Both setup node and the Dockerfile configuration should start from the same image container
    container: 
      image: node
    strategy:
      matrix:
        node-version: [12.x]
    
    steps: 

            ## Since jobs do not pull down the source code by default,
            ## you need to explicitly tell the job to do so
          - name: Checkout
            uses: actions/checkout@v1    

            ## Removed: Because it will build from Container image that is pulled above
            #### To setup Node.js used by the job
          ##- name: Use Node 12.x
            ##uses: actions/setup-node@v1
            ##with:
              ##node-version: '12.x'

          - name: Install dependencies
            run: npm ci
          - name: Build
            run: npm run build:ci
          
          - name: Test
            run: npm run test:ci

          - name: Archive build
            if: success()
            uses: actions/upload-artifact@v1
            with:
              name: deploy_dist
              path: dist
              
## Builds a Docker image and Pushes it to Docker Hub 
  cd:
    runs-on: ubuntu-latest
    needs: ci
    steps:
      - uses: actions/checkout@v1
      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Docker Build
        run: docker build -t front .
      - name: Docker Image Tagging
        run: |
          docker tag front ${{ secrets.DOCKER_USER }}/front:${{ github.sha }}
          docker tag front ${{ secrets.DOCKER_USER }}/front:latest
      - name: Docker Image Pushing
        run: |
          docker push ${{ secrets.DOCKER_USER }}/front:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USER }}/front:latest